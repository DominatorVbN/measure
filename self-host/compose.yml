# Measure Docker Compose
#
# Guidelines
# Follow these guidelines for a consistently maintained
# compose file and a pleasurable maintainer experience.
#
# - Order first-party services at the top followed by
#   third-party services. Databases and other external
#   services should appear after measure services.
# - Define a name for each container using `container_name`

name: measure
services:
  web:
    container_name: web
    build:
      context: ../measure-web-app
    ports:
      - "3000:3000"
    env_file:
      - ../measure-web-app/.env.local
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ../measure-web-app:/app
      - ../measure-web-app/public:/app/public
    depends_on:
      - api

  api:
    container_name: api
    build:
      context: ../measure-backend/measure-go
    ports:
      - "8080:8080"
    env_file:
      - ../measure-backend/measure-go/.env
    develop:
      watch:
        - path: ../measure-backend/measure-go
          action: rebuild
    depends_on:
      - postgres
      - clickhouse
      - minio
      - symbolicator-retrace

  symbolicator-retrace:
    container_name: symbolicator-retrace
    build:
      context: ../measure-backend/symbolicator-retrace
    ports:
      - "8181:8181"
    env_file:
      - ../measure-backend/symbolicator-retrace/.env
    volumes:
      - symbolicator-volume:/data
    develop:
      watch:
        - path: ../measure-backend/symbolicator-retrace
          action: rebuild
    depends_on:
      - minio

  minio:
    container_name: minio
    image: quay.io/minio/minio
    ports:
      - "9111:9000"
      - "9222:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  mc:
    container_name: mcmb
    image: minio/mc
    profiles:
      - init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set msr-minio http://minio:9000 minio minio123;
      mc mb --ignore-existing msr-minio/msr-symbols-sandbox msr-minio/msr-attachments-sandbox;
      exit 0;
      "

  dbmate:
    container_name: dbmate
    image: ghcr.io/amacneil/dbmate
    profiles:
      - migrate
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      clickhouse:
        condition: service_started
        restart: true
    volumes:
      - ./clickhouse:/clickhouse
      - ./postgres:/postgres
    entrypoint: >
      /bin/sh -c "
      cd /postgres;
      dbmate status;
      dbmate migrate;
      cd /clickhouse;
      dbmate status;
      dbmate migrate;
      exit 0;
      "

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    env_file:
      - ../measure-backend/measure-go/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10

  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:24
    ports:
      - "9000:9000/tcp"
      - "8123:8123"
    ulimits:
      nofile: 262144
    volumes:
      - clickhouse-volume:/var/lib/clickhouse
      - clickhouse-volume:/var/log/clickhouse-server

volumes:
  clickhouse-volume:
  symbolicator-volume:
  minio-data:
  pgdata:
